============================
Ideal constructor
============================

ideal<OF | a1,a2>;

---

(program
  (expression_statement
    (constructor
      name: (identifier)
      (identifier)
      (constructor_elements
        (identifier)
        (identifier)))))

============================
Recformat constructor
============================

recformat<get : UserProgram, set: UserProgram, isset: UserProgram>;
recformat< n : Integers(), misc, seq : SeqEnum >;

---

(program
  (expression_statement
    (recformat_constructor
      (field_definition
        name: (identifier)
        type: (identifier))
      (field_definition
        name: (identifier)
        type: (identifier))
      (field_definition
        name: (identifier)
        type: (identifier))))
  (expression_statement
    (recformat_constructor
      (field_definition
        name: (identifier)
        type: (call
          function: (identifier)
          arguments: (argument_list)))
      (identifier)
      (field_definition
        name: (identifier)
        type: (identifier)))))

============================
Stupid group quo constructor
============================

G<a,b,c,d,e> := quo< GrpPC : F | rels >;

---

(program
  (assignment
    left: (constructor
      name: (identifier)
      (identifier)
      (identifier)
      (identifier)
      (identifier)
      (identifier))
    right: (constructor
      name: (identifier)
      (identifier)
      (constructor_elements
        (constructor_options
          (identifier))
        (identifier)))))

