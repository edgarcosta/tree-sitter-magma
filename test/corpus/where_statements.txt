=======================================================
Basic where expression with "is"
=======================================================

x + y where x is 5;

---

    (program
      (where_expression
        (binary_operator
          (identifier)
          (identifier))
        (identifier)
        (integer)))

=======================================================
Basic where expression with ":="
=======================================================


a * b where a := 3;

---

    (program
      (where_expression
        (binary_operator
          (identifier)
          (identifier))
        (identifier)
        (integer)))

=======================================================
Where expression with function call
=======================================================

f(x) where x is 10;

---

    (program
      (where_expression
        (call
          (identifier)
          (argument_list
            (identifier)))
        (identifier)
        (integer)))

=======================================================
Where expression with comparison
=======================================================

a eq b where a is 5;

---

    (program
      (where_expression
        (comparison_operator
          (identifier)
          (identifier))
        (identifier)
        (integer)))

=======================================================
Where expression with parenthesized expression
=======================================================

(x + y) * z where x is 1;

---

    (program
      (where_expression
        (binary_operator
          (parenthesized_expression
            (binary_operator
              (identifier)
              (identifier)))
          (identifier))
        (identifier)
        (integer)))

=======================================================
Where expression with boolean operator
=======================================================

a and b where a is true;

---

    (program
      (where_expression
        (boolean_operator
          (identifier)
          (identifier))
        (identifier)
        (true)))


=======================================================
Where expression with unary operator
=======================================================

not p where p is false;

---

    (program
      (where_expression
        (unary_operator
          (identifier))
        (identifier)
        (false)))

=======================================================
Where expression with arithmetic
=======================================================

n + 1 where n is 42;

---

    (program
      (where_expression
        (binary_operator
          (identifier)
          (integer))
        (identifier)
        (integer)))

=======================================================
Left associativity
=======================================================

a + b where b := 1 where a:=10 where a := 3;

---

    (program
      (where_expression
        (where_expression
          (where_expression
            (binary_operator
              (identifier)
              (identifier))
            (identifier)
            (integer))
          (identifier)
          (integer))
        (identifier)
        (integer)))

=======================================================
Where expression with anonymous identifier
=======================================================

a + p where _, p := IsPrimePower(a) where a := 9;

---

(program
  (where_expression
    value: (where_expression
      value: (binary_operator
        left: (identifier)
        right: (identifier))
      variables: (anonymous_identifier)
      variables: (identifier)
      definition: (call
        function: (identifier)
        arguments: (argument_list
          argument: (identifier))))
    variables: (identifier)
    definition: (integer)))
